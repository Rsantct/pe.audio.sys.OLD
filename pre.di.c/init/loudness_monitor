#!/usr/bin/env python3
"""
    Starts / stops the loudness_monitor.py daemon client
    use:   loudness_monitor    start | stop
"""

import sys
from subprocess import Popen
from ruamel.yaml import YAML

import basepaths as bp
import getconfigs as gc

CTRLfname = f'{bp.main_folder}/.loudness_control'

def start():

    def check_config():
        """ Appends PorAudio in jack_monitors under config.yml, if necessary.
        """
        yaml = YAML()
        with open(f'{bp.config_folder}/config.yml', 'r') as f:
            config = yaml.load( f.read() )
        if not any( [ 'PortAudio' in x for x in config['jack_monitors'] ] ):
            print('(init/ebumeter) adding PortAudio for jack_monitors under config.yml')
            config['jack_monitors'].append( 'PortAudio:in_0 PortAudio:in_1' )
            with open(f'{bp.config_folder}/config.yml', 'w') as f:
                yaml.dump( config, f )

    check_config()
    
    # do create the auxiliary loudness monitor control file
    with open(CTRLfname, 'w') as f:
        f.write('')
        
    input_name = gc.state['input']
    sounddevice = gc.inputs[input_name]['in_ports'][0].split(':')[0]
    
    Popen( f'{bp.main_folder}/clients/bin/loudness_monitor.py \
             --input_device {sounddevice} \
             --control_file  {CTRLfname}\
             --output_file {bp.main_folder}/.loudness_monitor'.split() )


def stop():

    Popen( 'pkill -f loudness_monitor.py'.split() )

    
if sys.argv[1:]:
    try:
        option = {
            'start' : start,
            'stop'  : stop
            }[ sys.argv[1] ]()
    except:
        print( '(init/loudness_monitor) bad option' )
else:
    print(__doc__)

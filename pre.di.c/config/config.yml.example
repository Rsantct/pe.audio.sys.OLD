## Values cannot be void
## Numbers: assign "none" to not set
## Strings: assign "''" to not set

## The startup behavoir:

loudspeaker: dipojorns

# - optionally zeroes some settings
tone_reset_on_startup:      true
balance_reset_on_startup:   true
loudness_reset_on_startup:  false
midside_reset_on_startup:   true
solo_reset_on_startup:      true

# - volume (assign null to not set)
level_on_startup: -24
# - max volume (leave blank to not set, precedes level_on_startup)
max_level_on_startup: -20

# - some inputs can be avoided to be restored on startup (space delimited please)
avoid_inputs_on_startup: ''

# Delay between commands (seconds)
command_delay: 1

# "beep" command options to indicate software load
beep_options: ''

# Max digital gain (dB)
gain_max: 6

# Some daemon can read this to alert the user if reached,
# i.e. a mouse volume level control:
alert_level: -15

# The jack card (use full ALSA identifier 'hw:Card,Device')
system_card: hw:DX,0

# Additional cards to be used resampled under jack
# resamplingQuality: 0..4 for alsa_in/out or 16..96 for zita-a2j/j2a
# sintax:
# <card jack name>
#   {alsacard: ..., resampler: ..., resamplingQ:..., misc_params:...}
external_cards: ''
#external_cards:
#
#  # This is used to capture toslink
#  CSL:
#    alsacard:       hw:Device,0
#    resampler:      zita-a2j
#    resamplingQ:    96
#    misc_params:    ''
#
#  # This is used just to RTA external monitoring
#  DEQ2496:
#    #alsacard: hw:miniStreamer,0
#    # (i) Intel PCH digital section: hw:PCH,1 - SPDIF16
#    alsacard:       hw:PCH,1
#    resampler:      zita-j2a
#    resamplingQ:    16
#    misc_params:    ''
#

# Sound monitors (jack ports).
# Input selector will connect sources also to these ports.
# Please use space separated ports pairs, or assign empty list [] to not set.
jack_monitors:
    []
    #- DEQ2496:playback_1    DEQ2496:playback_2
    #- zita-j2n:in_1         zita-j2n:in_2

## Paths & options

# The generic server (will be called 'server.py control' for pre.di.c control)
server_path: ~/pre.di.c/bin/server.py

# Screen output: 0 (nothing) - 1 (minimal) - 2 (full)
control_output: 0
# Screen erasing between commands: True - false
control_clear: false

# Jack
jack_path: /usr/bin/jackd
# jack options on ALSA: omit cards and fs (managed in initaudio.py)
# - dummy:
#jack_options:          -R -ddummy -P8 -C2
# - RPI3 CLAC:
#jack_options:          -R -dalsa  -p4096 -n3 --shorts
# - salon:
jack_options: -R -dalsa -p128 -n2

# Brutefir,
# for options see https://www.ludd.ltu.se/~torger/brutefir.html#config
brutefir_path: /usr/bin/brutefir
brutefir_options: ''
brutefir_ports: brutefir:in.L brutefir:in.R

# Ecasound (optional)
load_ecasound: true
ecasound_path: /usr/bin/ecasound
# Number of parametrics
# Needed PEQxNN_defeat_Fs.ecs template in ~/config
ecasound_filters: 8
# Ecasound jack ports
ecasound_ports: ecasound:in_1 ecasound:in_2


## Net

# Brutefir cli address and port
bfcli_address: 127.0.0.1
bfcli_port: 3000

# Control server address and port
# 0.0.0.0 listen to all net connections
# 127.0.0.1 listen only to local connections
control_address: 0.0.0.0
control_port: 9999

# Auxiliary service servers (optional)
aux_address: localhost
aux_port: 9990
players_address: localhost
players_port: 9991

## Equalizer stage in Brutefir

# Filenames of frequencies, loudness curves, tone control curves, 
frequencies: R20_ext-freq.dat
loudness_mag_curves: R20_ext-loudness_mag.dat
loudness_pha_curves: R20_ext-loudness_pha.dat
treble_mag_curves: R20_ext-treble_mag.dat
treble_pha_curves: R20_ext-treble_pha.dat
bass_mag_curves: R20_ext-bass_mag.dat
bass_pha_curves: R20_ext-bass_pha.dat

loudness_SPLref: 83
loudness_SPLmax: 90
loudness_SPLmin: 70

# Index of the flat curve inside 'loudness_mag_curves'
loudness_index_flat: 7


# Max dB deviation from 0
tone_variation: 6
balance_variation: 6

# Jump between equalization curves (dB)
# not yet implemented, given as an indication that must be assumed
step: 1


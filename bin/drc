#!/usr/bin/env python2
# -*- coding: utf-8 -*-
'''
    Shows and changes Brutefir's DRC coeffs
    (i) NOT coordinated with the pre.di.c server, further more
        it is possible to have drc coeffs available but
        not declared inside the speaker.yml from pre.di.c

    drc 0   --> sets NO drc filtering.
    drc X   --> changes the drc filtering to #X
'''
import sys
import read_brutefir_process as bf
from brutefir_cli import bfcli

# Read Brutefir on the fly:
bf.read_config()
bf.read_running()

def drc_current():
    # read again runnig Brutefir:
    bf.read_running()
    cur = []
    for f in [ f for f in bf.filters_running if 'drc' in f['fname'] ]:
        cur.append(f)
    return cur

def drc_available():
    availables = []
    for c in bf.coeffs:
        if 'drc' in c['pcm']:
            yaesta = False
            for ava in availables:
                if c['name'][2:] == ava[1]:
                    yaesta = True
            if not yaesta:
                availables.append( (len(availables)+1, c['name'][2:]) )
                # Example:
                # (1, 'lp_DynA42')
                # (2, 'mp_DynA42')
    return availables

def drc_change(x):
    bfcmds = ''
    if x == '0':
        bfcli('cfc "f.drc.L" -1; cfc "f.drc.R" -1; quit;')
        return
    for f in ('f.drc.L', 'f.drc.R'):
        ch = f[-1]
        bareCoeffName = drc_availables[ int(x) - 1 ][1]
        c = ch + '_' + bareCoeffName
        bfcmds += 'cfc "' + f + '" "' + c + '";'
    bfcli(bfcmds + 'quit;')

if __name__ == '__main__':

    drc_availables = drc_available()
    new_drc=''

    # Read command line

    for opc in sys.argv:
        if opc.isdigit():
            new_drc = opc
        elif '-h' in opc:
            print __doc__
            sys.exit()

    if new_drc:
        #######################
        drc_change(new_drc)
        #######################
    else:
        #######################
        print "\nDRC available:"
        #######################
        for drc in drc_availables:
            print '#'+str(drc[0]), drc[1]

    #######################
    print "\nDRC running:"
    #######################
    for f in drc_current():
        if f['cname'] <> '-1':
            print f['fname'] + ':', f['cname'][2:], '( ' + f['cpcm'] + ' )'
        else:
            print f['fname'] + ':', '-1'
